{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rapha\\\\Documents\\\\GitHub\\\\SamuelBrettWilliamsWeb\\\\frontend\\\\src\\\\pages\\\\Films.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Films.css';\nimport '../components/SearchBar.js';\nimport '../components/ButtonGroup.js';\nimport '../styles/SearchBar.css';\nimport Film from '../components/Film.js';\nimport SearchBar from '../components/SearchBar';\nimport ButtonGroup from '../components/ButtonGroup';\nimport filmData from '../samples/sampleFilms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Films() {\n  _s();\n  const [data, setData] = useState(null);\n  const [filteredData, setFilteredData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [active, setActive] = useState(\"All\");\n  const films = filmData.map(item => {\n    return /*#__PURE__*/_jsxDEV(Film, {\n      ...item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  });\n\n  // const setFilms = films => {\n  //   setFilteredData(films);\n  // }\n\n  // const setActiveProp = (tabname) => {\n  //   setActive(tabname);\n  // }\n\n  // useEffect(() => {\n  //   fetch('http://localhost:3000/api/films')\n  //     .then(response => {\n  //       if (response.ok) {\n  //         return response.json()\n  //       }\n  //       throw response;\n  //     })\n  //     .then(data => {\n  //       setData(data);\n  //       setFilteredData(data);\n  //     })\n  //     .catch(error => {\n  //       console.error(\"Error fetching data: \", error);\n  //       setError(error);\n  //     })\n  //     .finally(() => {\n  //       setLoading(false);\n  //     })\n  // }, [])\n\n  // if (loading) return <div className=\"page\">Loading...</div>;\n  // if (error) return <div className=\"page\">Error!</div>;\n\n  // const showAll = () => {\n  //   setFilteredData(data);\n  // }\n\n  // const showType = (event, type) => {\n  //   var filtered_data = data.filter(data => data.type_film === type);\n  //   setFilteredData(filtered_data);\n  // }\n\n  // const types = [\n  //   {\n  //     type: \"Feature Film\",\n  //     event: showType\n  //   },\n  //   {\n  //     type: \"Short Film\",\n  //     event: showType\n  //   }];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"films\",\n      children: films\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Films, \"CY+1wRtotZ5P9lk5RqL1tS8XAQU=\");\n_c = Films;\nvar _c;\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"names":["React","useState","useEffect","Film","SearchBar","ButtonGroup","filmData","Films","data","setData","filteredData","setFilteredData","loading","setLoading","error","setError","active","setActive","films","map","item","id"],"sources":["C:/Users/rapha/Documents/GitHub/SamuelBrettWilliamsWeb/frontend/src/pages/Films.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Films.css'\r\nimport '../components/SearchBar.js'\r\nimport '../components/ButtonGroup.js'\r\nimport '../styles/SearchBar.css'\r\nimport Film from '../components/Film.js'\r\nimport SearchBar from '../components/SearchBar'\r\nimport ButtonGroup from '../components/ButtonGroup'\r\nimport filmData from '../samples/sampleFilms'\r\n\r\nexport default function Films() {\r\n    \r\n  const [data, setData] = useState(null);\r\n  const [filteredData, setFilteredData] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [active, setActive] = useState(\"All\");\r\n\r\n  const films = filmData.map(item => {\r\n    return(\r\n      <Film key = {item.id}\r\n      {...item}\r\n      />\r\n    )\r\n  })\r\n\r\n  // const setFilms = films => {\r\n  //   setFilteredData(films);\r\n  // }\r\n\r\n  // const setActiveProp = (tabname) => {\r\n  //   setActive(tabname);\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   fetch('http://localhost:3000/api/films')\r\n  //     .then(response => {\r\n  //       if (response.ok) {\r\n  //         return response.json()\r\n  //       }\r\n  //       throw response;\r\n  //     })\r\n  //     .then(data => {\r\n  //       setData(data);\r\n  //       setFilteredData(data);\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.error(\"Error fetching data: \", error);\r\n  //       setError(error);\r\n  //     })\r\n  //     .finally(() => {\r\n  //       setLoading(false);\r\n  //     })\r\n  // }, [])\r\n\r\n  // if (loading) return <div className=\"page\">Loading...</div>;\r\n  // if (error) return <div className=\"page\">Error!</div>;\r\n\r\n  // const showAll = () => {\r\n  //   setFilteredData(data);\r\n  // }\r\n  \r\n  // const showType = (event, type) => {\r\n  //   var filtered_data = data.filter(data => data.type_film === type);\r\n  //   setFilteredData(filtered_data);\r\n  // }\r\n\r\n  // const types = [\r\n  //   {\r\n  //     type: \"Feature Film\",\r\n  //     event: showType\r\n  //   },\r\n  //   {\r\n  //     type: \"Short Film\",\r\n  //     event: showType\r\n  //   }];\r\n\r\n  return (\r\n    <div className='page'>\r\n      {/* <SearchBar setContent={setFilms} showAll={showAll} setActiveProp={setActiveProp} name={\"films\"}/>\r\n\r\n      <ButtonGroup showAll={showAll} types={types} setActiveProp={setActiveProp} active={active}/>\r\n        {\r\n          filteredData && filteredData.map((data) => (\r\n            <div className=\"filmIcons\" key={data.id}>\r\n              Place film icons here\r\n            </div>\r\n          ))\r\n        }  */}\r\n      <div className = \"films\">\r\n        {films}\r\n      </div>\r\n    </div>\r\n\r\n    \r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAC5B,OAAO,4BAA4B;AACnC,OAAO,8BAA8B;AACrC,OAAO,yBAAyB;AAChC,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,QAAQ,MAAM,wBAAwB;AAAA;AAE7C,eAAe,SAASC,KAAK,GAAG;EAAA;EAE9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,EAAE;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMiB,KAAK,GAAGZ,QAAQ,CAACa,GAAG,CAACC,IAAI,IAAI;IACjC,oBACE,QAAC,IAAI;MAAA,GACDA;IAAI,GADKA,IAAI,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAElB;EAEN,CAAC,CAAC;;EAEF;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,uBAWnB;MAAK,SAAS,EAAG,OAAO;MAAA,UACrBH;IAAK;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAIV;AAAC,GAtFuBX,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}