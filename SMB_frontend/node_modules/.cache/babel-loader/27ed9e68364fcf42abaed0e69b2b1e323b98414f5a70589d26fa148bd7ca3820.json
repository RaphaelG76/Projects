{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rapha\\\\Documents\\\\Projects\\\\frontend\\\\src\\\\components\\\\PasswordReset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport '../styles/PasswordReset.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [password, setPassword] = useState();\n  const [passwordConfirm, setPasswordConfirm] = useState();\n  const [notMatched, setNotMatched] = useState(false);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [message, setMessage] = useState('');\n  const passwordConfirmHandler = e => {\n    if (e.target.value !== password) {\n      setNotMatched(true);\n    } else {\n      setNotMatched(false);\n    }\n    setPasswordConfirm(e.target.value);\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    fetch('/api/reset-password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token: searchParams.get('token'),\n        password: password\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Success');\n      setMessage('Password changed successfully!');\n      return alert('Password changed successfully!');\n    }).catch(error => {\n      console.error('Error changing password:', error);\n      setMessage('Error: Password could not be changed');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"password-reset\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"admin_title\",\n        children: \"Password Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"admin_form\",\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"admin_input newPass\",\n          type: \"password\",\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"admin_input confirm-pass\",\n          type: \"password\",\n          onChange: passwordConfirmHandler,\n          placeholder: \"Confirm new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), notMatched && /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"reset-password_notmatched\",\n          children: \"Password does not match!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgot-pass-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: notMatched,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"changed-pass\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n_s(PasswordReset, \"gmNj1h0/TwBPKLMjqIVu4sRJdQ4=\", false, function () {\n  return [useSearchParams];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","useSearchParams","PasswordReset","password","setPassword","passwordConfirm","setPasswordConfirm","notMatched","setNotMatched","error","setError","searchParams","setSearchParams","message","setMessage","passwordConfirmHandler","e","target","value","submitHandler","preventDefault","fetch","method","headers","body","JSON","stringify","token","get","then","response","json","data","console","log","alert","catch"],"sources":["C:/Users/rapha/Documents/Projects/frontend/src/components/PasswordReset.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport '../styles/PasswordReset.css';\r\n\r\nconst PasswordReset = () => {\r\n\tconst [password, setPassword] = useState();\r\n\tconst [passwordConfirm, setPasswordConfirm] = useState();\r\n\tconst [notMatched, setNotMatched] = useState(false);\r\n\tconst [error, setError] = useState('');\r\n\r\n\tconst [searchParams, setSearchParams] = useSearchParams();\r\n\tconst [message, setMessage] = useState('');\r\n\r\n\tconst passwordConfirmHandler = (e) => {\r\n\t\tif (e.target.value !== password) {\r\n\t\t\tsetNotMatched(true);\r\n\t\t} else {\r\n\t\t\tsetNotMatched(false);\r\n\t\t}\r\n\t\tsetPasswordConfirm(e.target.value);\r\n\t};\r\n\r\n\tconst submitHandler = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tfetch('/api/reset-password', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                token: searchParams.get('token'),\r\n\t\t\t\tpassword: password\r\n            })\r\n        })\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => {\r\n\t\t\tconsole.log('Success');\r\n\t\t\tsetMessage('Password changed successfully!');\r\n\t\t\treturn alert('Password changed successfully!');\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error changing password:', error);\r\n\t\t\tsetMessage('Error: Password could not be changed');\r\n\t\t});\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<section className='password-reset'>\r\n\t\t\t<div className='admin_content'>\r\n\t\t\t\t<h3 className='admin_title'>Password Reset</h3>\r\n\r\n\t\t\t\t<form className='admin_form' onSubmit={submitHandler}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"admin_input newPass\"\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\tplaceholder='New password'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName='admin_input confirm-pass'\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tonChange={passwordConfirmHandler}\r\n\t\t\t\t\t\tplaceholder='Confirm new password'\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{notMatched && (\r\n\t\t\t\t\t\t<label className='reset-password_notmatched'>\r\n\t\t\t\t\t\t\tPassword does not match!\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className=\"forgot-pass-button\">\r\n\t\t\t\t\t\t<button disabled={notMatched} type='submit'>Submit</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<p className='changed-pass'>{message}</p>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}