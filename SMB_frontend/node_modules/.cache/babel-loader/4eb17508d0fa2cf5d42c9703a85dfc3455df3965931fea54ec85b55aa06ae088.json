{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rapha\\\\Documents\\\\GitHub\\\\SamuelBrettWilliamsWeb\\\\frontend\\\\src\\\\components\\\\PasswordReset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n// import axios from 'axios';\n\nimport '../styles/PasswordReset.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [password, setPassword] = useState();\n  const [passwordConfirm, setPasswordConfirm] = useState();\n  const [notMatched, setNotMatched] = useState(false);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [message, setMessage] = useState('');\n  let token = console.log(searchParams.get('token'));\n  const passwordConfirmHandler = e => {\n    if (e.target.value !== password) {\n      setNotMatched(true);\n    } else {\n      setNotMatched(false);\n    }\n    setPasswordConfirm(e.target.value);\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    // const resopnse = await axios.post(\n    // \t'http://localhost:3000/api/reset-password',\n    // \t{\n    // \t\ttoken: searchParams.get('token'),\n    // \t\tpassword,\n    // \t}\n    // );\n    // console.log(resopnse);\n    setMessage('Password Changed');\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"password-reset\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-reset__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Password Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"password-reset__form\",\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: passwordConfirmHandler,\n          placeholder: \"confirm new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), notMatched && /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"reset-password__notmatched\",\n          children: \"Password does not match!..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n_s(PasswordReset, \"gmNj1h0/TwBPKLMjqIVu4sRJdQ4=\", false, function () {\n  return [useSearchParams];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","useSearchParams","PasswordReset","password","setPassword","passwordConfirm","setPasswordConfirm","notMatched","setNotMatched","error","setError","searchParams","setSearchParams","message","setMessage","token","console","log","get","passwordConfirmHandler","e","target","value","submitHandler","preventDefault"],"sources":["C:/Users/rapha/Documents/GitHub/SamuelBrettWilliamsWeb/frontend/src/components/PasswordReset.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\nimport '../styles/PasswordReset.css';\r\n\r\nconst PasswordReset = () => {\r\n\tconst [password, setPassword] = useState();\r\n\tconst [passwordConfirm, setPasswordConfirm] = useState();\r\n\tconst [notMatched, setNotMatched] = useState(false);\r\n\tconst [error, setError] = useState('');\r\n\r\n\tconst [searchParams, setSearchParams] = useSearchParams();\r\n\tconst [message, setMessage] = useState('');\r\n\r\n\tlet token = console.log(searchParams.get('token'));\r\n\r\n\tconst passwordConfirmHandler = (e) => {\r\n\t\tif (e.target.value !== password) {\r\n\t\t\tsetNotMatched(true);\r\n\t\t} else {\r\n\t\t\tsetNotMatched(false);\r\n\t\t}\r\n\t\tsetPasswordConfirm(e.target.value);\r\n\t};\r\n\r\n\tconst submitHandler = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t// const resopnse = await axios.post(\r\n\t\t// \t'http://localhost:3000/api/reset-password',\r\n\t\t// \t{\r\n\t\t// \t\ttoken: searchParams.get('token'),\r\n\t\t// \t\tpassword,\r\n\t\t// \t}\r\n\t\t// );\r\n\t\t// console.log(resopnse);\r\n\t\tsetMessage('Password Changed');\r\n\t};\r\n\treturn (\r\n\t\t<section className='password-reset'>\r\n\t\t\t<div className='password-reset__content'>\r\n\t\t\t\t<h2>Password Reset</h2>\r\n\r\n\t\t\t\t<form className='password-reset__form' onSubmit={submitHandler}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\tplaceholder='New password'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tonChange={passwordConfirmHandler}\r\n\t\t\t\t\t\tplaceholder='confirm new password'\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{notMatched && (\r\n\t\t\t\t\t\t<label className='reset-password__notmatched'>\r\n\t\t\t\t\t\t\tPassword does not match!..\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<button type='submit'>Submit</button>\r\n\r\n\t\t\t\t\t<h5>{message}</h5>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,kBAAkB;AAClD;;AAEA,OAAO,6BAA6B;AAAC;AAErC,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,EAAE;EAC1C,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,EAAE;EACxD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGX,eAAe,EAAE;EACzD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1C,IAAIe,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACN,YAAY,CAACO,GAAG,CAAC,OAAO,CAAC,CAAC;EAElD,MAAMC,sBAAsB,GAAIC,CAAC,IAAK;IACrC,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,KAAKnB,QAAQ,EAAE;MAChCK,aAAa,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACNA,aAAa,CAAC,KAAK,CAAC;IACrB;IACAF,kBAAkB,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,aAAa,GAAG,MAAOH,CAAC,IAAK;IAClCA,CAAC,CAACI,cAAc,EAAE;;IAElB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAV,UAAU,CAAC,kBAAkB,CAAC;EAC/B,CAAC;EACD,oBACC;IAAS,SAAS,EAAC,gBAAgB;IAAA,uBAClC;MAAK,SAAS,EAAC,yBAAyB;MAAA,wBACvC;QAAA,UAAI;MAAc;QAAA;QAAA;QAAA;MAAA,QAAK,eAEvB;QAAM,SAAS,EAAC,sBAAsB;QAAC,QAAQ,EAAES,aAAc;QAAA,wBAC9D;UACC,IAAI,EAAC,UAAU;UACf,QAAQ,EAAGH,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAC7C,WAAW,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA,QACzB,eACF;UACC,IAAI,EAAC,UAAU;UACf,QAAQ,EAAEH,sBAAuB;UACjC,WAAW,EAAC;QAAsB;UAAA;UAAA;UAAA;QAAA,QACjC,EAEDZ,UAAU,iBACV;UAAO,SAAS,EAAC,4BAA4B;UAAA,UAAC;QAE9C;UAAA;UAAA;UAAA;QAAA,QACA,eAED;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS,eAErC;UAAA,UAAKM;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACZ;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACG;AAEZ,CAAC;AAAC,GA/DIX,aAAa;EAAA,QAMsBD,eAAe;AAAA;AAAA,KANlDC,aAAa;AAiEnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}